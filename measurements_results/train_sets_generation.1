clf = MLPRegressor(hidden_layer_sizes=(board_size*board_size, board_size*board_size, 1), batch_size=int(0.01*len(Y)), max_iter=1000)

./main.py --player-a MLPPlayer --n-games=1000 --measure-train-sets-generation

Measuring for MLPPlayer and RandomPlayer, number of games: 1000
Now measuring train set sizes:
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 2
/usr/lib/python3.6/site-packages/sklearn/neural_network/multilayer_perceptron.py:358: UserWarning: Got `batch_size` less than 1 or larger than sample size. It is going to be clipped
  warnings.warn("Got `batch_size` less than 1 or larger than "
/usr/lib/python3.6/site-packages/sklearn/neural_network/multilayer_perceptron.py:564: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  % self.max_iter, ConvergenceWarning)
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 299
0: 63
-1: 138
B begins:
1: 151
0: 70
-1: 279
Totals:
1: 450
0: 133
-1: 417
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 10
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 300
0: 62
-1: 138
B begins:
1: 138
0: 67
-1: 295
Totals:
1: 438
0: 129
-1: 433
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 100
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 416
0: 37
-1: 47
B begins:
1: 237
0: 21
-1: 242
Totals:
1: 653
0: 58
-1: 289
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 500
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 418
0: 37
-1: 45
B begins:
1: 234
0: 97
-1: 169
Totals:
1: 652
0: 134
-1: 214
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 383
0: 69
-1: 48
B begins:
1: 293
0: 109
-1: 98
Totals:
1: 676
0: 178
-1: 146
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 5000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 466
0: 27
-1: 7
B begins:
1: 403
0: 59
-1: 38
Totals:
1: 869
0: 86
-1: 45
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 10000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 488
0: 12
-1: 0
B begins:
1: 426
0: 38
-1: 36
Totals:
1: 914
0: 50
-1: 36
Now measuring different train sets:
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 442
0: 36
-1: 22
B begins:
1: 359
0: 64
-1: 77
Totals:
1: 801
0: 100
-1: 99
Train set: MLPPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 301
0: 61
-1: 138
B begins:
1: 140
0: 71
-1: 289
Totals:
1: 441
0: 132
-1: 427
Train set: MLPPlayer vs MLPPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 355
0: 42
-1: 103
B begins:
1: 143
0: 89
-1: 268
Totals:
1: 498
0: 131
-1: 371
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
1: 432
0: 57
-1: 11
B begins:
1: 315
0: 106
-1: 79
Totals:
1: 747
0: 163
-1: 90
