clf = MLPRegressor(hidden_layer_sizes=(board_size*board_size, board_size*board_size, 1), batch_size=int(0.01*len(Y)), max_iter=1000)

./main.py --player-a MLPPlayer --n-games=1000 --measure-train-sets-generation

Measuring for MLPPlayer and RandomPlayer, number of games: 1000
Now measuring train set sizes:
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 2
/usr/lib/python3.6/site-packages/sklearn/neural_network/multilayer_perceptron.py:358: UserWarning: Got `batch_size` less than 1 or larger than sample size. It is going to be clipped
  warnings.warn("Got `batch_size` less than 1 or larger than "
/usr/lib/python3.6/site-packages/sklearn/neural_network/multilayer_perceptron.py:564: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  % self.max_iter, ConvergenceWarning)
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:299, D:63, L:138)
B begins:
(W:151, D:70, L:279)
Totals:
(W:450, D:133, L:417)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 10
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:300, D:62, L:138)
B begins:
(W:138, D:67, L:295)
Totals:
(W:438, D:129, L:433)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 100
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:416, D:37, L:47)
B begins:
(W:237, D:21, L:242)
Totals:
(W:653, D:58, L:289)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 500
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:418, D:37, L:45)
B begins:
(W:234, D:97, L:169)
Totals:
(W:652, D:134, L:214)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:383, D:69, L:48)
B begins:
(W:293, D:109, L:98)
Totals:
(W:676, D:178, L:146)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 5000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:466, D:27, L:7)
B begins:
(W:403, D:59, L:38)
Totals:
(W:869, D:86, L:45)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 10000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:488, D:12, L:0)
B begins:
(W:426, D:38, L:36)
Totals:
(W:914, D:50, L:36)







Now measuring different train sets:
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:442, D:36, L:22)
B begins:
(W:359, D:64, L:77)
Totals:
(W:801, D:100, L:99)
Train set: MLPPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:301, D:61, L:138)
B begins:
(W:140, D:71, L:289)
Totals:
(W:441, D:132, L:427)
Train set: MLPPlayer vs MLPPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:355, D:42, L:103)
B begins:
(W:143, D:89, L:268)
Totals:
(W:498, D:131, L:371)
Train set: RandomPlayer vs RandomPlayer. Number of games in set: 1000
Test begins...
Stats:
A - 1 - MLPPlayer
B - -1 - RandomPlayer
Number of wins for each player:
A begins:
(W:432, D:57, L:11)
B begins:
(W:315, D:106, L:79)
Totals:
(W:747, D:163, L:90)
